/**
 * This class is generated by jOOQ
 */
package com.github.gtmelo.sistci_api.data.tables;


import com.github.gtmelo.sistci_api.data.Keys;
import com.github.gtmelo.sistci_api.data.Sistci;
import com.github.gtmelo.sistci_api.data.tables.records.TciRecord;

import java.sql.Date;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Tci extends TableImpl<TciRecord> {

    private static final long serialVersionUID = 574456772;

    /**
     * The reference instance of <code>sistci.tci</code>
     */
    public static final Tci TCI = new Tci();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TciRecord> getRecordType() {
        return TciRecord.class;
    }

    /**
     * The column <code>sistci.tci.id</code>.
     */
    public final TableField<TciRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>sistci.tci.orgaoid</code>.
     */
    public final TableField<TciRecord, Integer> ORGAOID = createField("orgaoid", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>sistci.tci.pessoaid</code>.
     */
    public final TableField<TciRecord, Integer> PESSOAID = createField("pessoaid", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>sistci.tci.categoriaid</code>.
     */
    public final TableField<TciRecord, Integer> CATEGORIAID = createField("categoriaid", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>sistci.tci.prazoid</code>.
     */
    public final TableField<TciRecord, Integer> PRAZOID = createField("prazoid", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>sistci.tci.fundamento_legalid</code>.
     */
    public final TableField<TciRecord, Integer> FUNDAMENTO_LEGALID = createField("fundamento_legalid", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>sistci.tci.grau_sigiloid</code>.
     */
    public final TableField<TciRecord, Integer> GRAU_SIGILOID = createField("grau_sigiloid", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>sistci.tci.statusid</code>.
     */
    public final TableField<TciRecord, Integer> STATUSID = createField("statusid", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>sistci.tci.cidicid</code>.
     */
    public final TableField<TciRecord, Integer> CIDICID = createField("cidicid", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>sistci.tci.nup</code>.
     */
    public final TableField<TciRecord, String> NUP = createField("nup", org.jooq.impl.SQLDataType.VARCHAR.length(50).nullable(false), this, "");

    /**
     * The column <code>sistci.tci.data_producao</code>.
     */
    public final TableField<TciRecord, Date> DATA_PRODUCAO = createField("data_producao", org.jooq.impl.SQLDataType.DATE, this, "");

    /**
     * The column <code>sistci.tci.tipo</code>.
     */
    public final TableField<TciRecord, String> TIPO = createField("tipo", org.jooq.impl.SQLDataType.VARCHAR.length(254).nullable(false), this, "");

    /**
     * The column <code>sistci.tci.razao_classificacao</code>.
     */
    public final TableField<TciRecord, String> RAZAO_CLASSIFICACAO = createField("razao_classificacao", org.jooq.impl.SQLDataType.VARCHAR.length(254).nullable(false), this, "");

    /**
     * Create a <code>sistci.tci</code> table reference
     */
    public Tci() {
        this("tci", null);
    }

    /**
     * Create an aliased <code>sistci.tci</code> table reference
     */
    public Tci(String alias) {
        this(alias, TCI);
    }

    private Tci(String alias, Table<TciRecord> aliased) {
        this(alias, aliased, null);
    }

    private Tci(String alias, Table<TciRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Sistci.SISTCI;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TciRecord, Integer> getIdentity() {
        return Keys.IDENTITY_TCI;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TciRecord> getPrimaryKey() {
        return Keys.KEY_TCI_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TciRecord>> getKeys() {
        return Arrays.<UniqueKey<TciRecord>>asList(Keys.KEY_TCI_PRIMARY, Keys.KEY_TCI_NUP);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<TciRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<TciRecord, ?>>asList(Keys.ORGAO_TCI, Keys.PESSOA_TCI, Keys.TCI_CATEGORIA, Keys.TCI_PRAZO, Keys.TCI_FUNDAMENTO_LEGAL, Keys.TCI_GRAU_SIGILO, Keys.TCI_STATUS, Keys.TCI_CIDIC);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Tci as(String alias) {
        return new Tci(alias, this);
    }

    /**
     * Rename this table
     */
    public Tci rename(String name) {
        return new Tci(name, null);
    }
}
