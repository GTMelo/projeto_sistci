/**
 * This class is generated by jOOQ
 */
package com.github.gtmelo.sistci_api.data.tables;


import com.github.gtmelo.sistci_api.data.Keys;
import com.github.gtmelo.sistci_api.data.Sistci;
import com.github.gtmelo.sistci_api.data.tables.records.OrgaoRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Orgao extends TableImpl<OrgaoRecord> {

    private static final long serialVersionUID = 761075540;

    /**
     * The reference instance of <code>sistci.orgao</code>
     */
    public static final Orgao ORGAO = new Orgao();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<OrgaoRecord> getRecordType() {
        return OrgaoRecord.class;
    }

    /**
     * The column <code>sistci.orgao.id</code>.
     */
    public final TableField<OrgaoRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>sistci.orgao.organizacaoid</code>.
     */
    public final TableField<OrgaoRecord, Integer> ORGANIZACAOID = createField("organizacaoid", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>sistci.orgao.emailid</code>.
     */
    public final TableField<OrgaoRecord, Integer> EMAILID = createField("emailid", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>sistci.orgao.sigla</code>.
     */
    public final TableField<OrgaoRecord, String> SIGLA = createField("sigla", org.jooq.impl.SQLDataType.VARCHAR.length(20), this, "");

    /**
     * The column <code>sistci.orgao.nome</code>.
     */
    public final TableField<OrgaoRecord, String> NOME = createField("nome", org.jooq.impl.SQLDataType.VARCHAR.length(254), this, "");

    /**
     * The column <code>sistci.orgao.telefone</code>.
     */
    public final TableField<OrgaoRecord, String> TELEFONE = createField("telefone", org.jooq.impl.SQLDataType.VARCHAR.length(20), this, "");

    /**
     * The column <code>sistci.orgao.endereco</code>.
     */
    public final TableField<OrgaoRecord, String> ENDERECO = createField("endereco", org.jooq.impl.SQLDataType.VARCHAR.length(254), this, "");

    /**
     * Create a <code>sistci.orgao</code> table reference
     */
    public Orgao() {
        this("orgao", null);
    }

    /**
     * Create an aliased <code>sistci.orgao</code> table reference
     */
    public Orgao(String alias) {
        this(alias, ORGAO);
    }

    private Orgao(String alias, Table<OrgaoRecord> aliased) {
        this(alias, aliased, null);
    }

    private Orgao(String alias, Table<OrgaoRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Sistci.SISTCI;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<OrgaoRecord, Integer> getIdentity() {
        return Keys.IDENTITY_ORGAO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<OrgaoRecord> getPrimaryKey() {
        return Keys.KEY_ORGAO_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<OrgaoRecord>> getKeys() {
        return Arrays.<UniqueKey<OrgaoRecord>>asList(Keys.KEY_ORGAO_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<OrgaoRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<OrgaoRecord, ?>>asList(Keys.ORGANIZACAO_ORGAO, Keys.ORGAO_EMAIL);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Orgao as(String alias) {
        return new Orgao(alias, this);
    }

    /**
     * Rename this table
     */
    public Orgao rename(String name) {
        return new Orgao(name, null);
    }
}
