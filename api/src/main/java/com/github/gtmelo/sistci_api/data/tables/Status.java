/**
 * This class is generated by jOOQ
 */
package com.github.gtmelo.sistci_api.data.tables;


import com.github.gtmelo.sistci_api.data.Keys;
import com.github.gtmelo.sistci_api.data.Sistci;
import com.github.gtmelo.sistci_api.data.tables.records.StatusRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Status extends TableImpl<StatusRecord> {

    private static final long serialVersionUID = -1473693262;

    /**
     * The reference instance of <code>sistci.status</code>
     */
    public static final Status STATUS = new Status();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<StatusRecord> getRecordType() {
        return StatusRecord.class;
    }

    /**
     * The column <code>sistci.status.id</code>.
     */
    public final TableField<StatusRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>sistci.status.descricao</code>.
     */
    public final TableField<StatusRecord, String> DESCRICAO = createField("descricao", org.jooq.impl.SQLDataType.VARCHAR.length(20).nullable(false), this, "");

    /**
     * Create a <code>sistci.status</code> table reference
     */
    public Status() {
        this("status", null);
    }

    /**
     * Create an aliased <code>sistci.status</code> table reference
     */
    public Status(String alias) {
        this(alias, STATUS);
    }

    private Status(String alias, Table<StatusRecord> aliased) {
        this(alias, aliased, null);
    }

    private Status(String alias, Table<StatusRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Sistci.SISTCI;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<StatusRecord, Integer> getIdentity() {
        return Keys.IDENTITY_STATUS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<StatusRecord> getPrimaryKey() {
        return Keys.KEY_STATUS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<StatusRecord>> getKeys() {
        return Arrays.<UniqueKey<StatusRecord>>asList(Keys.KEY_STATUS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Status as(String alias) {
        return new Status(alias, this);
    }

    /**
     * Rename this table
     */
    public Status rename(String name) {
        return new Status(name, null);
    }
}
