/**
 * This class is generated by jOOQ
 */
package com.github.gtmelo.sistci_api.data.tables;


import com.github.gtmelo.sistci_api.data.Keys;
import com.github.gtmelo.sistci_api.data.Sistci;
import com.github.gtmelo.sistci_api.data.tables.records.EmailRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Email extends TableImpl<EmailRecord> {

    private static final long serialVersionUID = 1255906791;

    /**
     * The reference instance of <code>sistci.email</code>
     */
    public static final Email EMAIL = new Email();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<EmailRecord> getRecordType() {
        return EmailRecord.class;
    }

    /**
     * The column <code>sistci.email.id</code>.
     */
    public final TableField<EmailRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>sistci.email.email</code>.
     */
    public final TableField<EmailRecord, String> EMAIL_ = createField("email", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * Create a <code>sistci.email</code> table reference
     */
    public Email() {
        this("email", null);
    }

    /**
     * Create an aliased <code>sistci.email</code> table reference
     */
    public Email(String alias) {
        this(alias, EMAIL);
    }

    private Email(String alias, Table<EmailRecord> aliased) {
        this(alias, aliased, null);
    }

    private Email(String alias, Table<EmailRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Sistci.SISTCI;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<EmailRecord, Integer> getIdentity() {
        return Keys.IDENTITY_EMAIL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<EmailRecord> getPrimaryKey() {
        return Keys.KEY_EMAIL_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<EmailRecord>> getKeys() {
        return Arrays.<UniqueKey<EmailRecord>>asList(Keys.KEY_EMAIL_PRIMARY, Keys.KEY_EMAIL_EMAIL);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Email as(String alias) {
        return new Email(alias, this);
    }

    /**
     * Rename this table
     */
    public Email rename(String name) {
        return new Email(name, null);
    }
}
