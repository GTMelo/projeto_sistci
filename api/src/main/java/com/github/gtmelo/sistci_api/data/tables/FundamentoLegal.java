/**
 * This class is generated by jOOQ
 */
package com.github.gtmelo.sistci_api.data.tables;


import com.github.gtmelo.sistci_api.data.Keys;
import com.github.gtmelo.sistci_api.data.Sistci;
import com.github.gtmelo.sistci_api.data.tables.records.FundamentoLegalRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class FundamentoLegal extends TableImpl<FundamentoLegalRecord> {

    private static final long serialVersionUID = 656936126;

    /**
     * The reference instance of <code>sistci.fundamento_legal</code>
     */
    public static final FundamentoLegal FUNDAMENTO_LEGAL = new FundamentoLegal();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<FundamentoLegalRecord> getRecordType() {
        return FundamentoLegalRecord.class;
    }

    /**
     * The column <code>sistci.fundamento_legal.id</code>.
     */
    public final TableField<FundamentoLegalRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>sistci.fundamento_legal.descricao</code>.
     */
    public final TableField<FundamentoLegalRecord, String> DESCRICAO = createField("descricao", org.jooq.impl.SQLDataType.VARCHAR.length(254).nullable(false), this, "");

    /**
     * Create a <code>sistci.fundamento_legal</code> table reference
     */
    public FundamentoLegal() {
        this("fundamento_legal", null);
    }

    /**
     * Create an aliased <code>sistci.fundamento_legal</code> table reference
     */
    public FundamentoLegal(String alias) {
        this(alias, FUNDAMENTO_LEGAL);
    }

    private FundamentoLegal(String alias, Table<FundamentoLegalRecord> aliased) {
        this(alias, aliased, null);
    }

    private FundamentoLegal(String alias, Table<FundamentoLegalRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Sistci.SISTCI;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<FundamentoLegalRecord, Integer> getIdentity() {
        return Keys.IDENTITY_FUNDAMENTO_LEGAL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<FundamentoLegalRecord> getPrimaryKey() {
        return Keys.KEY_FUNDAMENTO_LEGAL_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<FundamentoLegalRecord>> getKeys() {
        return Arrays.<UniqueKey<FundamentoLegalRecord>>asList(Keys.KEY_FUNDAMENTO_LEGAL_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public FundamentoLegal as(String alias) {
        return new FundamentoLegal(alias, this);
    }

    /**
     * Rename this table
     */
    public FundamentoLegal rename(String name) {
        return new FundamentoLegal(name, null);
    }
}
